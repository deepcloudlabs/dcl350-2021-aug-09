server.port=2400

#retry configuration
resilience4j.retry.instances.retry1.max-attempts=5
resilience4j.retry.instances.retry1.wait-duration=1s
resilience4j.retry.instances.retry1.retry-exceptions=java.lang.IllegalStateException
resilience4j.retry.instances.retry1.result-predicate=com.example.predicate.FailurePredicate
resilience4j.retry.instances.retry1.enable-exponential-backoff=true
resilience4j.retry.instances.retry1.exponential-backoff-multiplier=2

#ratelimiter configuration
resilience4j.ratelimiter.instances.ratelimiter1.limit-refresh-period=10s
resilience4j.ratelimiter.instances.ratelimiter1.limit-for-period=2

#circuit-breaker configuration
# closed -- errors more than 20% --> open -- after 4s --> half-open -- after 8 successful calls --> closed
#                                      /\                  after 10s      
#                                       |----------------------|  
resilience4j.circuitbreaker.instances.circuitBreaker1.failure-rate-threshold=20
resilience4j.circuitbreaker.instances.circuitBreaker1.wait-duration-in-open-state=4s
resilience4j.circuitbreaker.instances.circuitBreaker1.permitted-number-of-calls-in-half-open-state=8
resilience4j.circuitbreaker.instances.circuitBreaker1.max-wait-duration-in-half-open-state=10s

#bulkhead configuration
resilience4j.bulkhead.instances.bulkhead1.max-concurrent-calls=4
resilience4j.bulkhead.instances.bulkhead1.max-wait-duration=2s
resilience4j.bulkhead.instances.bulkhead1.event-consumer-buffer-size=10

server.tomcat.threads.max=50